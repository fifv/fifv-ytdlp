* {
	font-family: futura, Arial, Helvetica, sans-serif;
	margin: 0;
	padding: 0;
}

svg {
	flex-shrink: 0;
}

input {
	outline: none;
	border: 1px solid wheat;
}

/**
 * disable override
 */
input[type=search] {
	-webkit-appearance: none;
}

// @import "bootstrap/scss/bootstrap";
$primary: rgb(236, 236, 236);
$primaryDark: rgb(185, 185, 185);
$primaryDarkDark: rgb(156, 156, 156);
$secondary: #6c757d;
$secondaryDark: #636b72;
$secondaryDarkDark: #5d656d;
$blue: #00c3ff;
$blueDark: #00ade2;
$success: #00ff0d;
$danger: #dc3545;
$dangerDark: #b82c3a;
// $darkTrans: rgba(24, 24, 24, 0.931);
$darkTrans: rgba(40, 44, 52, 0.931);


@mixin inputGroup {
	border-radius: 4px;

	&>:first-child,
	&>label:first-of-type {
		border-top-left-radius: 4px;
		border-bottom-left-radius: 4px;
	}

	&>:last-child,
	&>label:last-of-type {
		border-top-right-radius: 4px;
		border-bottom-right-radius: 4px;
	}

	&>:not(:first-child) {
		border-left: 0px solid #00ff0d !important;
	}

	&>* {
		border: 0;
	}
}

@mixin btn() {
	// background: rgba(187, 187, 187, 0.267);
	background: $secondary;
	color: $primary;
	// border: 1px solid $secondary;
	padding: 5px;

	&:hover {
		cursor: pointer;
		background: $secondaryDark;
	}

	&:active {
		background: $secondaryDarkDark;
	}
}

@mixin textInput {
	flex-grow: 1;
	background: transparent;
	border: 1px solid $secondary;
	color: $primary;

	&:focus-visible {
		box-shadow: 0px 0px 4px 0px rgb(136, 136, 136);
	}
}

@mixin selectorOption {
	display: flex;
	flex-direction: row;
	flex-wrap: nowrap;
	justify-content: center;
	align-content: center;
	align-items: center;

	padding: 8px;
	border: 1px solid $secondary;
	cursor: pointer;

	&.checked {
		color: $primary;
		background-color: $secondary;
	}
}

html {
	min-height: 100vh;
	-webkit-app-region: drag;

	button,
	input {
		-webkit-app-region: no-drag;
		color: $primary;
	}

	// opacity: 0;
	body {
		/**
		 * 我迷幻了,為什麼100vh會出現一條奇怪的空白
		 */
		// max-height: 100vh;
		// min-height: 100vh;
		// background-color: $danger;
		// background-color: #a0b1ffb2;
		// background-color: rgba(139, 195, 147, 0.76);

		// background-color: $darkTrans;
		height: 100vh;

		#root,
		#root>.container,
		.main {
			height: 100%;
		}

		// .container {
		// 	padding-left: 5%;
		// 	padding-right: 5%;
		// }


		// .input-url {
		// 	width: 80%;
		// }
	}
}

.main {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	flex-wrap: nowrap;
	align-content: stretch;
	align-items: stretch;

	.totalLoader {
		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: center;
		align-content: center;
		align-items: center;
		// border-left: 0;
		// border-bottom: 0;
		position: fixed;
		top: 10px;
		left: 10px;
		z-index: 100;
		// line-height: 42px;
	}

	.urlBar {
		@include inputGroup();
		height: 30px;
		// position: sticky;
		// width: 100%;
		flex-shrink: 0;
		// top: 32px;
		-webkit-app-region: no-drag;
		margin-top: 32px;
		margin-bottom: 15px;

		display: flex;
		flex-direction: row;
		flex-wrap: nowrap;
		justify-content: center;
		align-content: center;
		align-items: stretch;
		// padding-left: 5%;
		// padding-right: 5%;
		padding: 0 5%;



		.urlInput {
			// border-bottom: 0;
			padding-left: 10px;
			@include textInput();
		}


		.btnStart,
		.btnPaste {
			@include btn();
			padding: 8px;
			display: flex;
			flex-direction: row;
			flex-wrap: nowrap;
			justify-content: center;
			align-content: center;
			align-items: center;
		}

		.btnStart {

			&:hover {
				color: $blue;
			}

			&:active {
				color: $blueDark;
			}
		}

		.btnPaste {

			&:hover {
				color: $primaryDark;
			}

			&:active {
				color: $primaryDarkDark;
			}
		}


	}

	.optionsArea {
		flex-shrink: 0;
		margin-bottom: 20px;
		// margin-top: 20px;

		// position: fixed;
		// bottom: 32px;
		user-select: none;
		display: flex;
		flex-direction: column;
		flex-wrap: nowrap;
		align-content: stretch;
		align-items: stretch;
		justify-content: center;

		padding: 0 calc(5% - 5px);

		input,
		label,
		button,
		div {
			-webkit-app-region: no-drag;
		}


		.selectors {
			color: $secondary;

			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			align-content: center;
			justify-content: space-evenly;
			align-items: center;
			// width: 100%;

			input {
				display: none;
			}

			.selector {
				display: flex;
				flex-direction: row;
				flex-wrap: nowrap;
				justify-content: center;
				align-content: center;
				align-items: center;
				// margin-top: 5px;
				// margin-bottom: 5px;
				margin: 5px;

				// border: 1px solid $secondary;
				@include inputGroup();

				.selectorOption {
					@include selectorOption();
				}

				.btn-check:checked+.selectorOption {
					color: $primary;
					background-color: $secondary;
				}
			}
		}


		.options {
			display: flex;
			flex-direction: row;
			flex-wrap: wrap;
			justify-content: center;
			align-content: stretch;
			align-items: stretch;

			.optionWithInput {
				@media only screen and (max-width: 650px) {
					width: calc(100% - 10px);
				}

				width: calc(50% - 10px);
				// width: 310px;
				// margin-top: 5px;
				// margin-bottom: 5px;
				// margin: 5px;
				padding: 5px;
				color: $primary;
				display: flex;
				flex-direction: row;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-content: stretch;
				align-items: stretch;

				@include inputGroup();

				.selectorOption {
					@include selectorOption();
				}

				.promptButton {
					display: flex;
					flex-direction: row;
					flex-wrap: nowrap;
					justify-content: center;
					align-content: center;
					align-items: center;
					padding: 0px 8px !important;

					// border: 1px solid $secondary;
					background: $secondary;

					&.clickAble {
						@include btn();
					}

					&.noTextInput {
						flex-grow: 1;
						justify-content: flex-start;
					}

					// &:hover {
					// 	background: $secondaryDark;
					// }

					// &:active {
					// 	background: $secondaryDarkDark;
					// }

				}

				.input {
					display: flex;
					flex-direction: row;
					flex-wrap: nowrap;
					justify-content: center;
					align-content: center;
					align-items: center;
					@include textInput();
					padding: 0px 5px;
				}
			}
		}


	}

	.flipper {
		/**
			 * 只要這一條就能解決爆出來
			 */
		// overflow-y: scroll;
		-webkit-app-region: no-drag;
		flex-grow: 1;
		/**
		 * 鬼了,升級到electron22-beta5之後就出現了橫向scrollbar
		 */
		overflow-x: hidden;

		.display-area {
			flex-grow: 1;
			// overflow-y: scroll;
			// width: 100%;
			// margin-bottom: 15px;
			// font-size: 0.8em;
			font-size: 15px;

			padding: 0 5%;

			.task {
				/**
				 * 不能在這裡禁止拖動,滾到上面去會導致頂條也拖不了
				 */
				// -webkit-app-region: no-drag;
				z-index: -999;
				color: #fff;
				margin-top: 5px;
				margin-bottom: 5px;
				border-radius: 4px;
				border: 1px solid $primaryDark;
				border-radius: 4px;
				// padding: 5px;

				// background-color: #6d767e88;
				display: flex;
				flex-direction: row;
				flex-wrap: nowrap;
				justify-content: flex-start;
				align-items: center;
				align-content: center;

				.leftcol {
					user-select: none;
					padding-top: 5px;
					padding-bottom: 5px;
					width: 30px;
					flex-shrink: 0;

					display: flex;
					flex-direction: column;
					flex-wrap: nowrap;
					justify-content: center;
					align-content: center;
					align-items: center;

					.statusIndicator {
						height: 30px;
						width: 16px;

						display: flex;
						flex-direction: column;
						flex-wrap: nowrap;
						justify-content: space-around;
						align-content: center;
						align-items: center;

						// padding: 5px;
						// &>* {
						// 	margin-left: 5px;
						// 	margin-right: 5px;
						// }
						.svgCloseError {
							color: $danger;
						}

						.svgCloseStopped {
							color: $secondary;
						}

						.svgPhoto {
							color: $success;
						}

						.svgSuccess {
							color: $success;
						}
					}
				}

				.midcol {
					user-select: none;
					padding-top: 5px;
					padding-bottom: 5px;
					width: 90px;
					flex-shrink: 0;

					display: flex;
					flex-direction: column;
					flex-wrap: nowrap;
					justify-content: center;
					align-content: center;
					align-items: center;

				}

				.rightcol {
					display: flex;
					flex-direction: column;
					flex-wrap: nowrap;
					align-content: center;
					justify-content: center;
					align-items: flex-start;

					// padding: 5px;
					flex-grow: 1;
					margin-right: 10px;
					margin-top: 5px;
					margin-bottom: 5px;

					@mixin info {
						display: flex;
						flex-direction: row;
						flex-wrap: nowrap;
						justify-content: flex-start;
						align-content: center;
						align-items: center;

						margin: 5px;

						svg {
							margin-right: 5px;
						}
					}

					.infoTitle {
						@include info();
					}

					.infoOther {
						@include info();
						color: $blue;
					}

					.infoError {
						@include info();
						color: $danger;
					}

					// .progress {

					// 	width: 100%;
					// 	// background-color: $secondary;
					// 	background-color: $blue;
					// 	// border-left: 0;
					// 	// border-right: 0;
					// 	// border-bottom: $darkBlue 1px solid;
					// 	// border-top: $darkBlue 1px solid;
					// 	border: 0;
					// 	// outline: 1px $darkBlue solid;
					// 	height: 1px;
					// 	// border-top-right-radius: 0px;
					// 	// border-top-left-radius: 0px;
					// 	border-radius: 0;

					// 	.progress-bar {
					// 		background-color: $success;
					// 	}
					// }
					.progressBar {
						margin: 5px;
					}
				}

				.rightMostCol {
					user-select: none;
					display: flex;
					flex-direction: row;
					flex-wrap: nowrap;
					justify-content: center;
					align-content: center;
					align-items: center;

					// height: 100%;
					/**
					 * %用不了,可以用align-self
					 */
					align-self: stretch;
					width: 30px;
					/**
					 * 這個多加加,不然坍縮會很怪
					 */
					flex-shrink: 0;

					.svgRemoveConfirmed {
						color: $danger;
					}

					&:hover {
						cursor: pointer;

						// background: rgb(42, 42, 42);

						.svgClose {
							color: $danger;
							// &:
						}

						.svgRemove {
							color: $primaryDark;
						}

						.svgRemoveConfirmed {
							color: $dangerDark;
						}
					}
				}



			}
		}
	}
}

.trafficLight {
	-webkit-app-region: no-drag;
	position: fixed;
	top: 0;
	right: 0;
	// border-radius: 0;
	// border: 0;

	// @include inputGroup();

	button {
		@include btn();
		border: 0;
		// height: 25px;
		// width: 25px;
		// border-radius: 0 !important;
		background: transparent;
		line-height: 0;
	}
}

.react-contextmenu {
	/**
	 * 直接套用sample,稍微改了點
	 */
	background-color: $secondary;
	// border: 1px solid $secondary;
	border: 0;
	border-radius: 4px;
	// color: $primary;
	// font-size: 16px;
	margin: 2px 0 0;
	min-width: 160px;
	outline: none;
	opacity: 0;
	padding: 5px 0;
	pointer-events: none;
	text-align: left;
	transition: opacity 100ms ease !important;

	&.react-contextmenu--visible {
		opacity: 1;
		pointer-events: auto;
		z-index: 9999;
	}

	.react-contextmenu-item {
		border: 0;
		color: $primary;
		font-size: 13px;
		cursor: pointer;
		// font-weight: 400;
		line-height: 1.5;
		padding: 3px 20px;
		text-align: inherit;
		white-space: nowrap;

		&.react-contextmenu-item--active,
		&.react-contextmenu-item--selected {
			color: #fff;
			background-color: $secondaryDarkDark;
			// border-color: #20a0ff;
			text-decoration: none;
		}

		&.react-contextmenu-item--disabled,
		&.react-contextmenu-item--disabled:hover {
			background-color: transparent;
			border-color: rgba(0, 0, 0, .15);
			color: #878a8c;
		}


		&.react-contextmenu-submenu {
			padding: 0;
		}

		&.react-contextmenu-submenu>.react-contextmenu-item {}

		&.react-contextmenu-submenu>.react-contextmenu-item:after {
			content: "▶";
			display: inline-block;
			position: absolute;
			right: 7px;
		}

	}

	.example-multiple-targets::after {
		content: attr(data-count);
		display: block;
	}

	.react-contextmenu-item--divider {
		border-bottom: 1px solid rgba(0, 0, 0, .15);
		cursor: inherit;
		margin-bottom: 3px;
		padding: 2px 0;
	}

	.react-contextmenu-item--divider:hover {
		background-color: transparent;
		border-color: rgba(0, 0, 0, .15);
	}
}

.scrollbarTrackVertical {
	right: 3%;
	top: 0;
	// bottom: 5px;
	height: 100%;
	border-radius: 3px;
}

.tippy-box {
	$background: $secondaryDarkDark;

	background: $background !important;

	&[data-placement^='top']>.tippy-arrow::before {
		border-top-color: $background !important;
	}

	&[data-placement^='bottom']>.tippy-arrow::before {
		border-bottom-color: $background !important;
	}

	&[data-placement^='left']>.tippy-arrow::before {
		border-left-color: $background !important;
	}

	&[data-placement^='right']>.tippy-arrow::before {
		border-right-color: $background !important;
	}
}

::-webkit-scrollbar {
	/*滚动条整体样式*/
	/* 詭異,react-custom-scrollbars會吃這個,0px就消失.但是1px就沒問題 */
	width: 1px;
	/*高宽分别对应横竖滚动条的尺寸*/
	/* 高度0相當於禁用了橫向滾動條 */
	height: 0px;
}

::-webkit-scrollbar-thumb {
	/*滚动条里面小方块*/
	/* border-radius: 10px; */
	/* box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2); */
	background: $secondary;

}

::-webkit-scrollbar-track {
	/*滚动条里面轨道*/
	/* box-shadow: inset 0 0 5px rgba(0, 0, 0, 0.2); */
	/* border-radius: 10px; */
	background: transparent;
}

.no-scrollbar::-webkit-scrollbar {
	/*滚动条整体样式*/
	width: 0px;
}